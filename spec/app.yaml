swagger: '2.0'
info:
  description: 'Manage the created apps'
  version: '1.0.0'
  title: 'APP'
  termsOfService: '#'
  contact:
    email: 'info@liara.ir'
host: 'api.iran.liara.ir'
schemes:
  - 'https'
consumes:
  - application/json
produces:
  - application/json

paths:
  '/v1/projects':
    get:
      tags:
      - 'Apps'
      summary: 'Get details of all projects'
      description: 'get all details of all projects that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
      responses:
        200: 
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/Projects'
        401:
          description: 'Missing authentication'
        404:
          description: 'App does not exists.'

    post:
      tags:
        - 'Apps'
      summary: 'Create a app'
      description: 'create app that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
        - in: body
          name: create app
          required: true
          schema:
            $ref: '#/definitions/Create-app'
      responses:
        200:
          description: 'Successful operation'
        400:
          description: 'Bad request'
        401:
          description: 'Missing authentication'
        403:
          description: 'Forbidden'
        404:
          description: 'App does not exists.'
        409:
          description: 'Conflict'
  '/v1/projects/{app-name}':
    delete:
      tags:
        - 'Apps'
      summary: 'Create a app'
      description: 'delete app that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
        - in: path
          name: app-name
          required: true
          type: string
          description: 'The name of the app to delete'
      responses:
        200:
          description: 'Your request has been submitted.'
        204: 
          description: 'App deleted.'
        401:
          description: 'Missing authentication'
        404:
          description: 'App does not exists.'
    get:
      tags:
      - 'Apps'
      summary: 'Get details of all project'
      description: 'get all details of all project that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
        - in: path
          name: app-name
          description: 'The name of your app'
          type: string
          required: true
      responses:
        200: 
          description: 'Successful operation'
          schema:
            $ref: '#/definitions/ProjectAllDetails'
        401:
          description: 'Missing authentication'
        404:
          description: 'App does not exists.'
  '/v1/projects/{app-name}/actions/scale':
    post:
      tags:
        - 'Apps'
      summary: 'Turn on or off a app'
      description: 'turn on or off a app that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
        - in: path
          name: app-name
          required: true
          type: string
          description: 'The name of the app to turn on or off'
        - in: body
          name: scale
          description: 'Return 1 to turn on or 0 to turn off'
          required: true
          schema:
            type: object
            required:
              - scale
            properties:
              scale:
                type: number
                default: 1
      responses:
        200:
          description: 'Your request has been submitted.'
        401:
          description: 'Missing authentication'
        404:
          description: 'App does not exists.'
  '/v1/projects/{app-name}/actions/restart':
    post:
      tags:
        - 'Apps'
      summary: 'To restart a app'
      description: 'to restart app that user owns'
      parameters:
        - in: header
          name: 'Authorization'
          description: 'authorization token (Starts with Bearer)'
          type: string
          required: true
        - in: path
          name: app-name
          required: true
          type: string
          description: 'The name of the app to restart'
      responses:
        200:
          description: 'Your request has been submitted.'
        401:
          description: 'Missing authentication'
        404:
          description: 'App does not exists.'
  '/v2/projects/{app-name}/sources':
    post:
      tags: 
        - 'Deploy'
      summary: 'Deploy sources code'
      description: 'deploy sources code that user owns'
      parameters:
          - in: header
            name: 'Authorization'
            description: 'authorization token (Starts with Bearer)'
            type: string
            required: true
          - in: header
            name: Content-Type
            description: 'File upload method by default(multipart/form-data)'
            type: string
            required: true
            default: multipart/form-data
          - in: path
            name: app-name
            description: 'The name of your app for deploy'
            type: string
            required: true
          - in: formData
            name: file
            type: file
            required: true
            description: 'The .gz file to deploy'
      responses:
        200:
          description: 'Successful operation'
        400:
          description: 'Bad request'
        401:
          description: 'Missing authentication'
        403:
          description: 'Forbidden'
        404:
          description: 'App does not exists.'
  '/v2/projects/{app-name}/releases':
    post:
      tags: 
        - 'Deploy'
      summary: 'Deploy sources code'
      description: 'deploy sources code that user owns'
      parameters:
          - in: header
            name: 'Authorization'
            description: 'authorization token (Starts with Bearer)'
            type: string
            required: true
          - in: path
            name: app-name
            description: 'The name of your app for deploy'
            type: string
            required: true
          - in: body
            name: deploy releases
            required: true
            schema:
              $ref: '#/definitions/Deploy-releases'
      responses:
        200:
          description: 'Successful operation'
        400:
          description: 'Bad request'
        401:
          description: 'Missing authentication'
        403:
          description: 'Forbidden'
        404:
          description: 'App does not exists.'

definitions:
  Create-app:
    properties: 
      name:
        type: string
        description: 'The name of app that you want to create'
      planID:
        type: string
        description: 'The plan of app that you want to create'
      platform:
        type: string
        description: 'The platform of app that you want to create'
  ProjectAllDetails:
    type: object 
    properties: 
      project:
        type: object
        properties:
          _id:
            type: string
            description: 'The id of project'
          project_id:
            type: string
            description: 'The name of project'
          type:
            type: string
            description: 'The platform of project'
          status:
            type: string
            description: 'The status of project'
          defaultSubdomain:
            type: boolean
            description: 'The defaultSubdomain status of project'
          zeroDowntime:
            type: boolean
            description: 'The zeroDowntime status of project'
          scale:
            type: string
            description: 'The being on of project'
          envs: 
            type: array
            description: 'The envs of project'
            items:
              properties: 
                key:
                  type: string
                value: 
                  type: string
                encrypted:
                  type: boolean
                _id: 
                  type: string
          planID:
            type: string
            description: 'The plan of project'
          fixedIPStatus:
            type: string
            description: 'The fixedIPStatus of project'
          created_at:
            type: string
            description: 'The time to create of project'
          node:
            type: object
            description: 'The node of project'
            properties: 
              _id:
                type: string
              IP:
                type: string
          hourlyPrice:
            type: number
            description: 'The hourlyPrice of project'
          isDeployed:
            type: string
            description: 'The deployment status of project'
          reservedDiskSpace:
            type: number
            description: 'The count reservedDiskSpace of project'
  Projects:
    type: object
    properties:
      projects:
        type: array
        items:
          properties: 
            _id:
              type: string
              description: 'The id of project'
            project_id:
              type: string
              description: 'The name of project'
            type:
              type: string
              description: 'The platform of project'
            status:
              type: string
              description: 'The status of project'
            scale:
              type: string
              description: 'The being on of project'
            planID:
              type: string
              description: 'The plan of project'
            created_at:
              type: string
              description: 'The time to create the project'
            isDeployed:
              type: string
              description: 'The project deployment status'
  Deploy-releases:
    type: object
    properties:
      sourceID:
        type: string
        description: The id of Deployed sources
      port:
        type: number
        description: The port of your app
      type:
        type: string
        description: The platform of your app

externalDocs: 
  description: 'Find out more about APP'
  url: 'http://liara.ir'